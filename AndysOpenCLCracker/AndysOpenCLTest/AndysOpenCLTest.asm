; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	c:\Users\Andy\documents\visual studio 2010\Projects\AndysOpenCLTest\AndysOpenCLTest\AndysOpenCLTest.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
PUBLIC	?CreateDeviceContext@AndysOpenCLTest@@QAEXXZ	; AndysOpenCLTest::CreateDeviceContext
PUBLIC	?GetDeviceInfo@AndysOpenCLTest@@QAEXXZ		; AndysOpenCLTest::GetDeviceInfo
PUBLIC	__$ArrayPad$
PUBLIC	_main
EXTRN	__imp_?get@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEHXZ:PROC
EXTRN	__imp_?cin@std@@3V?$basic_istream@DU?$char_traits@D@std@@@1@A:BYTE
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__chkstk:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\users\andy\documents\visual studio 2010\projects\andysopencltest\andysopencltest\andysopencltest.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _main
_TEXT	SEGMENT
_openClInstance$ = -6232				; size = 6224
__$ArrayPad$ = -4					; size = 4
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
_main	PROC						; COMDAT
; Line 10
	push	ebp
	mov	ebp, esp
	mov	eax, 6428				; 0000191cH
	call	__chkstk
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-6428]
	mov	ecx, 1607				; 00000647H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 13
	lea	ecx, DWORD PTR _openClInstance$[ebp]
	call	?GetDeviceInfo@AndysOpenCLTest@@QAEXXZ	; AndysOpenCLTest::GetDeviceInfo
; Line 14
	lea	ecx, DWORD PTR _openClInstance$[ebp]
	call	?CreateDeviceContext@AndysOpenCLTest@@QAEXXZ ; AndysOpenCLTest::CreateDeviceContext
; Line 16
	mov	esi, esp
	mov	ecx, DWORD PTR __imp_?cin@std@@3V?$basic_istream@DU?$char_traits@D@std@@@1@A
	call	DWORD PTR __imp_?get@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 18
	xor	eax, eax
; Line 19
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@main
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 6428				; 0000191cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@main:
	DD	1
	DD	$LN4@main
$LN4@main:
	DD	-6232					; ffffe7a8H
	DD	6224					; 00001850H
	DD	$LN3@main
$LN3@main:
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	67					; 00000043H
	DB	108					; 0000006cH
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	0
_main	ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BJ@KFCOJLPA@?7Local?5Memory?3?7?7?7?$CFu?5kb?6?6?$AA@ ; `string'
PUBLIC	??_C@_0CF@JDCHABBI@?7Max?5Allocateable?5Memory?3?7?$CF0?400f@ ; `string'
PUBLIC	??_C@_0BN@EBLGMEIG@?7Global?5Memory?3?7?7?7?$CF0?400f?5mb?6?$AA@ ; `string'
PUBLIC	__real@4130000000000000
PUBLIC	??_C@_0BL@HGEOHACB@?7Clock?5Frequency?3?7?7?$CFu?5mHz?6?$AA@ ; `string'
PUBLIC	??_C@_0BK@BAPDBHGF@?7Max?5Workgroup?5size?3?7?7?$CFu?6?$AA@ ; `string'
PUBLIC	??_C@_0BG@MLOGOOLC@?7Compute?5Units?3?7?7?7?$CFu?6?$AA@ ; `string'
PUBLIC	??_C@_0BC@INKJKGAJ@?7Available?3?7?7?7?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_02JINPPBEP@No?$AA@			; `string'
PUBLIC	??_C@_03CCLAEDDF@Yes?$AA@			; `string'
PUBLIC	??_C@_0BA@KEJAJLLA@?7Vendor?3?7?7?7?7?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0O@PIGDJGIN@?7Name?3?7?7?7?7?$CFs?6?$AA@	; `string'
PUBLIC	??_C@_0M@EBKIJPKN@Device?3?5?$CFu?6?$AA@	; `string'
PUBLIC	??_C@_0M@LLMEPPMN@?6GPUs?3?7?$CFu?6?6?$AA@	; `string'
PUBLIC	??_C@_09LPGCJECO@?6CPUs?3?7?$CFu?$AA@		; `string'
PUBLIC	??_C@_0DK@CJDDKGCK@?6Number?5of?5available?5OpenCL?5Devi@ ; `string'
PUBLIC	??_C@_01EEMJAFIK@?6?$AA@			; `string'
PUBLIC	??_C@_0BG@CPKLBEBO@Platform?5Profile?3?7?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0BJ@LDCENOFA@Platform?5Extensions?3?7?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0BG@NPKDFPMJ@Platform?5Version?3?7?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0BE@FHJDLJL@Platform?5Name?3?7?7?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0BF@BLIGFBGJ@Platform?5Vendor?3?7?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0M@FFCJGFGL@Platform?3?6?6?$AA@		; `string'
PUBLIC	??_C@_0DM@BBEBFJDI@?6Number?5of?5available?5OpenCL?5plat@ ; `string'
EXTRN	_clGetDeviceInfo@20:PROC
EXTRN	_clGetDeviceIDs@24:PROC
EXTRN	_clGetPlatformInfo@20:PROC
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	__imp__printf:PROC
EXTRN	_clGetPlatformIDs@12:PROC
EXTRN	__fltused:DWORD
;	COMDAT ??_C@_0BJ@KFCOJLPA@?7Local?5Memory?3?7?7?7?$CFu?5kb?6?6?$AA@
CONST	SEGMENT
??_C@_0BJ@KFCOJLPA@?7Local?5Memory?3?7?7?7?$CFu?5kb?6?6?$AA@ DB 09H, 'Loc'
	DB	'al Memory:', 09H, 09H, 09H, '%u kb', 0aH, 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@JDCHABBI@?7Max?5Allocateable?5Memory?3?7?$CF0?400f@
CONST	SEGMENT
??_C@_0CF@JDCHABBI@?7Max?5Allocateable?5Memory?3?7?$CF0?400f@ DB 09H, 'Ma'
	DB	'x Allocateable Memory:', 09H, '%0.00f mb', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@EBLGMEIG@?7Global?5Memory?3?7?7?7?$CF0?400f?5mb?6?$AA@
CONST	SEGMENT
??_C@_0BN@EBLGMEIG@?7Global?5Memory?3?7?7?7?$CF0?400f?5mb?6?$AA@ DB 09H, 'G'
	DB	'lobal Memory:', 09H, 09H, 09H, '%0.00f mb', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT __real@4130000000000000
CONST	SEGMENT
__real@4130000000000000 DQ 04130000000000000r	; 1.04858e+006
CONST	ENDS
;	COMDAT ??_C@_0BL@HGEOHACB@?7Clock?5Frequency?3?7?7?$CFu?5mHz?6?$AA@
CONST	SEGMENT
??_C@_0BL@HGEOHACB@?7Clock?5Frequency?3?7?7?$CFu?5mHz?6?$AA@ DB 09H, 'Clo'
	DB	'ck Frequency:', 09H, 09H, '%u mHz', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@BAPDBHGF@?7Max?5Workgroup?5size?3?7?7?$CFu?6?$AA@
CONST	SEGMENT
??_C@_0BK@BAPDBHGF@?7Max?5Workgroup?5size?3?7?7?$CFu?6?$AA@ DB 09H, 'Max '
	DB	'Workgroup size:', 09H, 09H, '%u', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@MLOGOOLC@?7Compute?5Units?3?7?7?7?$CFu?6?$AA@
CONST	SEGMENT
??_C@_0BG@MLOGOOLC@?7Compute?5Units?3?7?7?7?$CFu?6?$AA@ DB 09H, 'Compute '
	DB	'Units:', 09H, 09H, 09H, '%u', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@INKJKGAJ@?7Available?3?7?7?7?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BC@INKJKGAJ@?7Available?3?7?7?7?$CFs?6?$AA@ DB 09H, 'Available:', 09H
	DB	09H, 09H, '%s', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02JINPPBEP@No?$AA@
CONST	SEGMENT
??_C@_02JINPPBEP@No?$AA@ DB 'No', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03CCLAEDDF@Yes?$AA@
CONST	SEGMENT
??_C@_03CCLAEDDF@Yes?$AA@ DB 'Yes', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@KEJAJLLA@?7Vendor?3?7?7?7?7?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BA@KEJAJLLA@?7Vendor?3?7?7?7?7?$CFs?6?$AA@ DB 09H, 'Vendor:', 09H, 09H
	DB	09H, 09H, '%s', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PIGDJGIN@?7Name?3?7?7?7?7?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0O@PIGDJGIN@?7Name?3?7?7?7?7?$CFs?6?$AA@ DB 09H, 'Name:', 09H, 09H, 09H
	DB	09H, '%s', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@EBKIJPKN@Device?3?5?$CFu?6?$AA@
CONST	SEGMENT
??_C@_0M@EBKIJPKN@Device?3?5?$CFu?6?$AA@ DB 'Device: %u', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LLMEPPMN@?6GPUs?3?7?$CFu?6?6?$AA@
CONST	SEGMENT
??_C@_0M@LLMEPPMN@?6GPUs?3?7?$CFu?6?6?$AA@ DB 0aH, 'GPUs:', 09H, '%u', 0aH
	DB	0aH, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_09LPGCJECO@?6CPUs?3?7?$CFu?$AA@
CONST	SEGMENT
??_C@_09LPGCJECO@?6CPUs?3?7?$CFu?$AA@ DB 0aH, 'CPUs:', 09H, '%u', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@CJDDKGCK@?6Number?5of?5available?5OpenCL?5Devi@
CONST	SEGMENT
??_C@_0DK@CJDDKGCK@?6Number?5of?5available?5OpenCL?5Devi@ DB 0aH, 'Number'
	DB	' of available OpenCL Devices for this platform:', 09H, '%u', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6?$AA@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6?$AA@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@CPKLBEBO@Platform?5Profile?3?7?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BG@CPKLBEBO@Platform?5Profile?3?7?$CFs?6?$AA@ DB 'Platform Profile'
	DB	':', 09H, '%s', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@LDCENOFA@Platform?5Extensions?3?7?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BJ@LDCENOFA@Platform?5Extensions?3?7?$CFs?6?$AA@ DB 'Platform Exte'
	DB	'nsions:', 09H, '%s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@NPKDFPMJ@Platform?5Version?3?7?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BG@NPKDFPMJ@Platform?5Version?3?7?$CFs?6?$AA@ DB 'Platform Version'
	DB	':', 09H, '%s', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@FHJDLJL@Platform?5Name?3?7?7?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BE@FHJDLJL@Platform?5Name?3?7?7?$CFs?6?$AA@ DB 'Platform Name:', 09H
	DB	09H, '%s', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@BLIGFBGJ@Platform?5Vendor?3?7?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BF@BLIGFBGJ@Platform?5Vendor?3?7?$CFs?6?$AA@ DB 'Platform Vendor:', 09H
	DB	'%s', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@FFCJGFGL@Platform?3?6?6?$AA@
CONST	SEGMENT
??_C@_0M@FFCJGFGL@Platform?3?6?6?$AA@ DB 'Platform:', 0aH, 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DM@BBEBFJDI@?6Number?5of?5available?5OpenCL?5plat@
CONST	SEGMENT
??_C@_0DM@BBEBFJDI@?6Number?5of?5available?5OpenCL?5plat@ DB 0aH, 'Number'
	DB	' of available OpenCL platforms on this machine:', 09H, '%u', 0aH
	DB	0aH, 00H					; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?GetDeviceInfo@AndysOpenCLTest@@QAEXXZ
_TEXT	SEGMENT
tv565 = -268						; size = 8
tv562 = -260						; size = 8
tv327 = -256						; size = 4
$T31852 = -248						; size = 4
$T31853 = -236						; size = 4
_j$ = -32						; size = 4
_i$ = -20						; size = 4
_this$ = -8						; size = 4
?GetDeviceInfo@AndysOpenCLTest@@QAEXXZ PROC		; AndysOpenCLTest::GetDeviceInfo, COMDAT
; _this$ = ecx
; Line 22
	push	ebp
	mov	ebp, esp
	sub	esp, 268				; 0000010cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 67					; 00000043H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 30
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	push	0
	push	0
	call	_clGetPlatformIDs@12
; Line 31
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET ??_C@_0DM@BBEBFJDI@?6Number?5of?5available?5OpenCL?5plat@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 34
	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, 4
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T31852[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T31852[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 36
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_clGetPlatformIDs@12
; Line 40
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN6@GetDeviceI
$LN5@GetDeviceI:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN6@GetDeviceI:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jae	$LN4@GetDeviceI
; Line 42
	mov	esi, esp
	push	OFFSET ??_C@_0M@FFCJGFGL@Platform?3?6?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 44
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 24					; 00000018H
	push	eax
	push	1024					; 00000400H
	push	2307					; 00000903H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	push	ecx
	call	_clGetPlatformInfo@20
; Line 45
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 2072				; 00000818H
	push	eax
	push	1024					; 00000400H
	push	2306					; 00000902H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	push	ecx
	call	_clGetPlatformInfo@20
; Line 46
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 1048				; 00000418H
	push	eax
	push	1024					; 00000400H
	push	2305					; 00000901H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	push	ecx
	call	_clGetPlatformInfo@20
; Line 47
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 3096				; 00000c18H
	push	eax
	push	1024					; 00000400H
	push	2308					; 00000904H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	push	ecx
	call	_clGetPlatformInfo@20
; Line 48
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4120				; 00001018H
	push	eax
	push	1024					; 00000400H
	push	2304					; 00000900H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	push	ecx
	call	_clGetPlatformInfo@20
; Line 50
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 24					; 00000018H
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_0BF@BLIGFBGJ@Platform?5Vendor?3?7?$CFs?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 51
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 2072				; 00000818H
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_0BE@FHJDLJL@Platform?5Name?3?7?7?$CFs?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 52
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 1048				; 00000418H
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_0BG@NPKDFPMJ@Platform?5Version?3?7?$CFs?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 53
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 3096				; 00000c18H
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_0BJ@LDCENOFA@Platform?5Extensions?3?7?$CFs?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 54
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4120				; 00001018H
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_0BG@CPKLBEBO@Platform?5Profile?3?7?$CFs?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 56
	mov	esi, esp
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 58
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	push	eax
	push	0
	push	0
	push	0
	push	-1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	push	ecx
	call	_clGetDeviceIDs@24
; Line 59
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	push	0
	push	0
	push	0
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	push	ecx
	call	_clGetDeviceIDs@24
; Line 60
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	push	0
	push	0
	push	0
	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	push	ecx
	call	_clGetDeviceIDs@24
; Line 61
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	OFFSET ??_C@_0DK@CJDDKGCK@?6Number?5of?5available?5OpenCL?5Devi@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 62
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	push	OFFSET ??_C@_09LPGCJECO@?6CPUs?3?7?$CFu?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 63
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	push	OFFSET ??_C@_0M@LLMEPPMN@?6GPUs?3?7?$CFu?6?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 66
	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	edx, 4
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T31853[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T31853[ebp]
	mov	DWORD PTR [eax+20], ecx
; Line 68
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	push	0
	push	-1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	push	ecx
	call	_clGetDeviceIDs@24
; Line 71
	mov	DWORD PTR _j$[ebp], 0
	jmp	SHORT $LN3@GetDeviceI
$LN2@GetDeviceI:
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
$LN3@GetDeviceI:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _j$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jae	$LN1@GetDeviceI
; Line 74
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 5144				; 00001418H
	push	eax
	push	1024					; 00000400H
	push	4139					; 0000102bH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _j$[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	push	ecx
	call	_clGetDeviceInfo@20
; Line 75
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 24					; 00000018H
	push	eax
	push	1024					; 00000400H
	push	4140					; 0000102cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _j$[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	push	ecx
	call	_clGetDeviceInfo@20
; Line 76
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 6168				; 00001818H
	push	eax
	push	4
	push	4098					; 00001002H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _j$[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	push	ecx
	call	_clGetDeviceInfo@20
; Line 77
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 6172				; 0000181cH
	push	eax
	push	4
	push	4100					; 00001004H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _j$[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	push	ecx
	call	_clGetDeviceInfo@20
; Line 78
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 6176				; 00001820H
	push	eax
	push	8
	push	4127					; 0000101fH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _j$[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	push	ecx
	call	_clGetDeviceInfo@20
; Line 79
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 6184				; 00001828H
	push	eax
	push	4
	push	4108					; 0000100cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _j$[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	push	ecx
	call	_clGetDeviceInfo@20
; Line 80
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 6192				; 00001830H
	push	eax
	push	8
	push	4112					; 00001010H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _j$[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	push	ecx
	call	_clGetDeviceInfo@20
; Line 81
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 6200				; 00001838H
	push	eax
	push	8
	push	4131					; 00001023H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _j$[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	push	ecx
	call	_clGetDeviceInfo@20
; Line 82
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 6208				; 00001840H
	push	eax
	push	4
	push	4135					; 00001027H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _j$[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	push	ecx
	call	_clGetDeviceInfo@20
; Line 85
	mov	esi, esp
	mov	eax, DWORD PTR _j$[ebp]
	push	eax
	push	OFFSET ??_C@_0M@EBKIJPKN@Device?3?5?$CFu?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 86
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 5144				; 00001418H
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_0O@PIGDJGIN@?7Name?3?7?7?7?7?$CFs?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 87
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 24					; 00000018H
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_0BA@KEJAJLLA@?7Vendor?3?7?7?7?7?$CFs?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 88
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+6208], 0
	je	SHORT $LN9@GetDeviceI
	mov	DWORD PTR tv327[ebp], OFFSET ??_C@_03CCLAEDDF@Yes?$AA@
	jmp	SHORT $LN10@GetDeviceI
$LN9@GetDeviceI:
	mov	DWORD PTR tv327[ebp], OFFSET ??_C@_02JINPPBEP@No?$AA@
$LN10@GetDeviceI:
	mov	esi, esp
	mov	ecx, DWORD PTR tv327[ebp]
	push	ecx
	push	OFFSET ??_C@_0BC@INKJKGAJ@?7Available?3?7?7?7?$CFs?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 89
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+6168]
	push	ecx
	push	OFFSET ??_C@_0BG@MLOGOOLC@?7Compute?5Units?3?7?7?7?$CFu?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 90
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+6172]
	push	ecx
	push	OFFSET ??_C@_0BK@BAPDBHGF@?7Max?5Workgroup?5size?3?7?7?$CFu?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 91
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+6184]
	push	ecx
	push	OFFSET ??_C@_0BL@HGEOHACB@?7Clock?5Frequency?3?7?7?$CFu?5mHz?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 92
	mov	eax, DWORD PTR _this$[ebp]
	fild	QWORD PTR [eax+6176]
	fdiv	QWORD PTR __real@4130000000000000
	mov	esi, esp
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET ??_C@_0BN@EBLGMEIG@?7Global?5Memory?3?7?7?7?$CF0?400f?5mb?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 93
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+6192]
	mov	edx, DWORD PTR [eax+6196]
	mov	DWORD PTR tv562[ebp], ecx
	mov	DWORD PTR tv562[ebp+4], edx
	mov	eax, DWORD PTR tv562[ebp+4]
	mov	DWORD PTR tv565[ebp+4], eax
	and	DWORD PTR tv562[ebp+4], 2147483647	; 7fffffffH
	fild	QWORD PTR tv562[ebp]
	and	DWORD PTR tv565[ebp+4], -2147483648	; 80000000H
	mov	DWORD PTR tv565[ebp], 0
	fild	QWORD PTR tv565[ebp]
	fchs
	faddp	ST(1), ST(0)
	fdiv	QWORD PTR __real@4130000000000000
	mov	esi, esp
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET ??_C@_0CF@JDCHABBI@?7Max?5Allocateable?5Memory?3?7?$CF0?400f@
	call	DWORD PTR __imp__printf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 94
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+6200]
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_0BJ@KFCOJLPA@?7Local?5Memory?3?7?7?7?$CFu?5kb?6?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 95
	jmp	$LN2@GetDeviceI
$LN1@GetDeviceI:
; Line 96
	jmp	$LN5@GetDeviceI
$LN4@GetDeviceI:
; Line 97
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetDeviceInfo@AndysOpenCLTest@@QAEXXZ ENDP		; AndysOpenCLTest::GetDeviceInfo
_TEXT	ENDS
EXTRN	_clCreateCommandQueue@20:PROC
EXTRN	_clCreateContext@24:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CreateDeviceContext@AndysOpenCLTest@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?CreateDeviceContext@AndysOpenCLTest@@QAEXXZ PROC	; AndysOpenCLTest::CreateDeviceContext, COMDAT
; _this$ = ecx
; Line 100
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 106
	push	0
	push	0
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	push	1
	push	0
	call	_clCreateContext@24
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+6212], eax
; Line 108
	push	0
	push	0
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+6212]
	push	ecx
	call	_clCreateCommandQueue@20
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+6216], eax
; Line 111
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?CreateDeviceContext@AndysOpenCLTest@@QAEXXZ ENDP	; AndysOpenCLTest::CreateDeviceContext
_TEXT	ENDS
END
